job("JOB1_task6"){
  description("Automatically download the code from github. Create Dynamic image from dockerfile and upload it to docker hub.")
  scm{
    github("Mangalofficial/Kubernetes-cluster", 'master')
  }
  triggers{
    scm("* * * * * ")
  }
  steps{
    shell('''sudo sleep 5
sudo cp -r -v -f * /webserver''')
  }
}

job("JOB2_task6"){
  description("Run certains jobs specified below.")
  triggers{
    upstream {
      upstreamProjects("JOB1_task6")
      threshold("SUCCESS")
    }
  }
  steps{
    shell('''sudo sleep 5
if sudo kubectl get pvc | grep httpd-pvc
then 
    echo "PVC already created."
    echo "Applying the latest changes."
    sudo kubectl apply -f /webserver/PVC.yml
else
    echo "Creating new Persistent_Volume_claim"
    sudo sleep 3
    sudo kubectl create -f /webserver/PVC.yml
fi


if sudo kubectl get svc | grep web-service
then 
    echo "Already created."
    echo "Applying the latest changes."
    sudo kubectl apply -f /webserver/svc.yml
else
    echo "Creating new Service."
    sudo sleep 3
    sudo kubectl create -f /webserver/svc.yml
fi


if sudo kubectl get deployment | grep myweb
then 
    echo "Already deployment created."
    echo "------ Rolling OUT ------."
    sudo kubectl rollout restart deployments/myweb
    sudo kubectl rollout status deployments/myweb
else
    echo "Creating new Deployment."
    sudo sleep 3
    sudo kubectl create -f /webserver/Deployment.yml
    sudo sleep 10
    sudo kubectl get all 
    sudo kubectl get pods > name
    echo "`cat name | cut -d" " -f1`" > pod.py
	sudo kubectl cp /webserver/index.html `python3 /webserver/pod_task6.py`:/usr/local/apache2/htdocs
    sudo kubectl describe pod myweb | grep Node: > IP
    sudo echo "IP Address: http://`cat IP | cut -d"/" -f2`:30251"
    sudo sleep 5
fi''')
  }
}


job("JOB3_task6"){
  description("Testing the Code.")
  triggers{
    upstream {
      upstreamProjects("JOB2_task6")
      threshold("SUCCESS")
    }
  }
  steps{
    shell('''sudo sleep 3
status=$(curl -o /dev/null -s -w "%{http_code}" http://192.168.99.103:30251/index.html)
if [ $status == 200 ]
then
    echo "NO Error"
    echo "Status_code : $status"
    exit 0
else
    echo "An Issue found"
    echo "Status_code : $status"
    exit 1
fi''')
  }
}

job("JOB4_task6"){
  description("Notifying the Developer.")
  triggers{
    upstream {
      upstreamProjects("JOB3_task6")
      threshold("SUCCESS")
    }
  }
  steps{
    shell('''sudo sleep 3
statuscode=$(curl -s -o /dev/null -w "%{http_code}" 192.168.99.103:30251/index.html)
if $statuscode == '200'
then
    echo "Successfully Tested"
    exit 0
else
    echo "Error Code : $statuscode"
    echo "Notifying to developer via E-Mail"
    sudo python3 /webserver/script.py
    exit 0
fi''')
  }
}
